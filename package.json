{
  "name": "com.unity.behavior",
  "displayName": "Behavior",
  "version": "1.0.10",
  "unity": "6000.0",
  "unityRelease": "16f1",
  "description": "Unity Behavior is a graph-based tool to create and run behavior trees with a modular architecture.\n\n▪ Human-readable graphs flow top-to-bottom with plain-language nodes\n▪ Comprehensive library of pre-built nodes for movement, detection, and decision-making\n▪ Seamless C# integration with a familiar lifecycle model\n▪ Hierarchical design supporting reusable subgraphs\n▪ Real-time debugging visualization during Play mode\n▪ Event-driven architecture for dynamic game reactions\n\nIdeal for NPC behaviors, quest logic, environmental interactions, and game state management.\n\nA demo showcasing this package can be found in the Asset Store <a href=https://assetstore.unity.com/packages/templates/tutorials/behavior-demo-for-unity-298313>https://assetstore.unity.com/packages/templates/tutorials/behavior-demo-for-unity-298313</a>.",
  "keywords": [
    "behavior",
    "behavior tree",
    "behavior graph",
    "graph",
    "ai",
    "gameplay",
    "NPCs"
  ],
  "dependencies": {
    "com.unity.dt.app-ui": "2.0.0-pre.16",
    "com.unity.modules.unitywebrequest": "1.0.0",
    "com.unity.modules.animation": "1.0.0",
    "com.unity.modules.ai": "1.0.0",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.particlesystem": "1.0.0",
    "com.unity.nuget.newtonsoft-json": "3.2.1",
    "com.unity.burst": "1.7.2",
    "com.unity.collections": "2.1.4"
  },
  "relatedPackages": {
    "com.unity.behavior.tests": "0.0.0"
  },
  "samples": [
    {
      "displayName": "Unity Behavior Example",
      "description": "A simple Behavior example.",
      "path": "Samples~/Example"
    },
    {
      "displayName": "Runtime Serialization",
      "description": "A small example showing how to serialize and deserialize the active state of a behavior tree at runtime.",
      "path": "Samples~/Serialization"
    }
  ],
  "_upm": {
    "changelog": "### Added\n- Blackboard variable UI elements expanded/collapsed state is now preserved across domain reloads for the duration of an Editor session.\n- Added Queue mode for StartOnEvent node that preserves and processes messages sequentially. It can be used to preserve messages when multiple events are received in a single frame. (BEHAVB-290)\n- Added `Allow Disabled Agent Debugging` to project settings > Behavior > Asset Settings.\n- Graph debug now displays an \"(Outdated)\" tag on agents whose instance graph differs from the current version of the source graph.\n\n### Changed\n- As part of the Muse product sunset, the generative AI features have been disabled.\n- Updated the serialization sample so that now we save to a file and load from it between sessions.\n- Blackboard asset variable are now readonly when viewed from the graph editor blackboard view. This change was made to clarify that default values should be changed from the source blackboard asset.\n- `Patrol`, `NavigateToTarget` and `NavigateToLocation` action nodes now set animator speed based on agent velocity, even when not using NavMeshAgent component.\n- Sticky notes now support rich text.\n\n### Fixed\n- Fixed a runtime serialization issues with monobehaviors in the sample.\n- Fixed a variety of runtime serialization issues where inheritance between assemblies was causing issues. Lots of additional tests were added to ensure the fixes.\n- Fixed graph asset with static subgraph reference loosing their SubgraphsInfo metadata when opening editor.\n- Fixed performance issues when moving nodes around in the graph.\n- Improved undo-redo handling of BlackboardVariable for Create, Detele, Rename and SetValue commands when blackboard editor is open.\n- Improved blackboard view refresh mechanism.\n- Fixed undo-redo not rebuilding the asset runtime data when needed.\n- Fixed undo-redo inconsistent behaviors in both GraphEditor and BlackboardEditor.\n- Fixed inconsistent undo-redo of BlackboardVariable SetValue command when a blackboard editor is open.\n- Fixed undoing a delete operation on a `Conditional Branch` node failing to restore the True and False node.\n- Fixes `BehaviorGraphAgent.SetVariableValue` not working when trying to assign value to a variable from a linked blackboard asset when the agent is not initialized.\n- Fixed Behavior Graph not rebuilding runtime graph when edited during Play Mode. (BEHAVB-310)\n- Fixed graph debugging nodes status not showing the correct status after editing a graph during Play Mode.\n- Fixed graph debugging not tagging disabled agent as \"(Disabled)\" in the agent picker window.\n- Fixed an issue in PatrolAction where the agent would incorrectly mark waypoints as reached during path calculation, causing it to skip waypoints when wait times were used. (Credit to @viento20340)\n- Fixed navigation nodes not reverting NavMeshAgent speed to its original value when node's `OnEnd` was called.\n- Fixed navigation nodes overriding default NavMeshAgent stopping distance post runtime deserialization.\n- Fixed order of the Blackboard variable list in the Inspector window becomes unsynchronized when the list order is changed in the Behaviour Graph window's Blackboard. (BEHAVB-288) \n\n### Known Issues\n- `RunSubgraph (Static)` node doesn't refresh properly when the referenced subgraph asset is deleted.\n- In regard to runtime serialization, `RunSubgraph (Dynamic)` is not yet fully supported and should not be use with runtime serialization. `RunSubgraph (Static)` is supported and can be use with runtime serialization.\n- In regards to runtime serialization, shared variables will not restore their previously saved state after deserializing.\n- Blackboard items re-ordering is now undo-able but some inconsistencies remains when redo-ing.\n- When editing graphs in Play Mode, changes to shared blackboard variables will be reflected at runtime. However, agent-specific values will revert when exiting Play Mode. This can cause agent shared blackboard variables to become out of sync with source shared blackboard variables. Workarounds: To re-sync all shared variable instances, edit the "
  },
  "upmCi": {
    "footprint": "a5700a8276d31bbe2ff511901b0118cec30af190"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.behavior@1.0/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.designer-monorepo.git",
    "type": "git",
    "revision": "f772f1b3520fa842d5a35aac2c9d1ff1c28646b3"
  }
}
